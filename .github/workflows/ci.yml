name: GitHub API Testing

# 触发条件：当代码被 push 或创建 pull request 时执行
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  # 运行环境为 Ubuntu 最新版本

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # 获取 GitHub 仓库的代码

      - name: Set up Python
        uses: actions/setup-python@v4
       
name: GitHub API Testing

# 触发条件：当代码被 push 或创建 pull request 时执行
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  # 运行环境为 Ubuntu 最新版本

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # 获取 GitHub 仓库的代码

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # 指定 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true  # 安装依赖（如果 requirements.txt 不存在，则不会报错）

      - name: Run tests
        run: python -m unittest discover  # 运行 Python 单元测试
Y
name: GitHub API Testing

# 触发条件：代码被 push 或创建 pull request 时执行
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  # 运行环境为 Ubuntu 最新版本

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # 获取 GitHub 仓库的代码

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # 指定 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true  # 安装依赖（如果 requirements.txt 不存在，则不会报错）

      - name: Run tests
        run: python -m unittest discover  # 运行 Python 单元测试

